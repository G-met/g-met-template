// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
  projectDatabaseType = "PostgreSQL"
  includeRelationFields= false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model equipo {
  id                  String             @id @default(cuid())
  codigo              String             @unique @db.VarChar(20)
  descripcion         String             @db.VarChar(60)
  modelo              String             @db.VarChar(40)
  serie               String             @db.VarChar(40)
  status              enum_status
  ubicacion           ubicacion          @relation(fields: [ubicacion_id], references: [id])
  responsable         responsable        @relation(fields: [responsable_id], references: [id])
  responsable_id      String             @unique
  ubicacion_id        String             @unique
  marca               marca              @relation(fields: [marca_id], references: [id])
  marca_id            String             @unique
  equipo_actividad    equipo_actividad[]
  fecha_creacion      DateTime           @default(now())
  fecha_actualizacion DateTime           @updatedAt
}

model responsable {
  id                  String      @id @default(cuid())
  equipo              equipo[]
  ubicacion           ubicacion[]
  alias               String      @unique @db.VarChar(10)
  descripcion         String      @db.VarChar(40)
  fecha_creacion      DateTime    @default(now())
  fecha_actualizacion DateTime    @updatedAt
}

model ubicacion {
  id                  String      @id @default(cuid())
  descripcion         String      @db.VarChar(40)
  equipo              equipo[]
  responsable         responsable @relation(fields: [responsable_id], references: [id])
  responsable_id      String      @unique
  status              enum_status
  fecha_creacion       DateTime    @default(now())
  fecha_actualizacion DateTime    @updatedAt
}

model marca {
  id                 String   @id @default(cuid())
  alias              String
  descripcion        String
  equipo             equipo[]
  fechaCreacion      DateTime @default(now())
  fechaactualizacion DateTime @updatedAt
}

model tipo_actividad {
  id                       String              @id @default(cuid())
  descripcion              enum_tipo_actividad
  status                   enum_status
  equipo_tipo_actividad    equipo_actividad    @relation(fields: [equipo_tipo_actividad_id], references: [id])
  equipo_tipo_actividad_id String
  fechaCreacion            DateTime            @default(now())
  fechaactualizacion       DateTime            @updatedAt
}

// Tabla intermedia
model equipo_actividad {
  id                            String                       @id @default(cuid())
  tipo_actividad                tipo_actividad[]
  actividades_equipo            equipo                       @relation(fields: [actividades_equipo_id], references: [id])
  actividades_equipo_id         String
  fercuencia_actividad_equipo   frecuencia_actividad_equipo?
  fechaCreacion                 DateTime                     @default(now())
  fechaActualizacion            DateTime                     @updatedAt
  frecuencia_actividad_equipoId String
}

model frecuencia_actividad_equipo {
  id                             String              @id @default(cuid())
  descripcion                    enum_tipo_actividad
  frecuencia_actividad_equipo    equipo_actividad    @relation(fields: [frecuencia_actividad_equipo_id], references: [id])
  frecuencia_actividad_equipo_id String              @unique
  fechaCreacion                  DateTime            @default(now())
  fechaActualizacion             DateTime            @updatedAt
}

// Lugar para los Enum

enum enum_status {
  activo
  inactivo
}

enum enum_tipo_actividad {
  calibracion
  verificacion
  mantenimiento_correctivo
  mantenimiento_preventivo
  operaciones
}

enum frecuencia {
  Semanal
  Quincenal
  Mensual
  Bimensual
  Trimestral
  Cuatrimensual
  Semestral
  Anual
  Bianual
  Trianual
  Cuatrianual
  Quintianual
  Sextanual
}

enum rol {
  admin
  metrologo
  consulta
  coordinador
  directorTecnico
  auxiliarMetrologia
  dev
}
