// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider              = "prisma-dbml-generator"
  projectDatabaseType   = "PostgreSQL"
  includeRelationFields = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model equipo {
  id          String @id @default(cuid())
  codigo      String @unique @db.VarChar(20)
  descripcion String @db.VarChar(60)
  modelo      String @db.VarChar(40)
  serie       String @db.VarChar(40)
  datos_metrologicos datos_metrologicos_equipos?
  responsable    responsable @relation(fields: [responsable_id], references: [id])
  responsable_id String      @unique
  marca                       marca                         @relation(fields: [marca_id], references: [id])
  marca_id                    String                        @unique
  
  fecha_creacion              DateTime                      @default(now())
  fecha_actualizacion         DateTime                      @updatedAt
  fecha_inactivacion          DateTime?
  ubicacion                   ubicacion?                    @relation(fields: [ubicacionId], references: [id])
  ubicacionId                 String?
}

model responsable {
  id                  String      @id @default(cuid())
  ubicacion           ubicacion[]
  identificacion      String      @unique @db.VarChar(10)
  nombre              String      @db.VarChar(40)
  apellido            String      @db.VarChar(40)
  fecha_creacion      DateTime    @default(now())
  fecha_actualizacion DateTime    @updatedAt
  fecha_inactivacion  DateTime?
  equipo              equipo?
  patron              patrones?
}

model ubicacion {
  id                  String      @id @default(cuid())
  nombre              String      @db.VarChar(40)
  equipo              equipo[]
  responsable         responsable @relation(fields: [responsable_id], references: [id])
  responsable_id      String      @unique
  fecha_creacion      DateTime    @default(now())
  fecha_actualizacion DateTime    @updatedAt
  fecha_inactivacion  DateTime?
  patrones            patrones[]
}

model marca {
  id                 String    @id @default(cuid())
  identificacion     String
  descripcion        String
  equipo             equipo[]
  fechaCreacion      DateTime  @default(now())
  fechaactualizacion DateTime  @updatedAt
  fecha_inactivacion DateTime?
  patrones           patrones?
}

model tipo_actividad {
  id                          String                      @id @default(cuid())
  descripcion                 String
  fecha_creacion              DateTime                    @default(now())
  fecha_actualizacion         DateTime                    @updatedAt
  fecha_inactivacion          DateTime?
}


// Tabla intermedia
// model equipo_actividad_frecuencia {
//   id                             String           @id @default(cuid())
//   descripcion                    String
//   frecuencia                     frecuencia[]
//   tipo_actividad                 tipo_actividad[]
//   equipo_actividad_frecuencia    equipo           @relation(fields: [equipo_actividad_frecuencia_id], references: [id])
//   equipo_actividad_frecuencia_id String
//   fecha_creacion                 DateTime         @default(now())
//   fecha_actualizacion            DateTime         @updatedAt
//   fecha_inactivacion             DateTime?
//   patrones                       patrones?        @relation(fields: [patronesId], references: [id])
//   patronesId                     String?
// }

model frecuencia {
  id_frecuencia               String                      @id @default(cuid())
  descripcion                 String
  cantidad_dias               Int                         @db.Integer
  fecha_creacion              DateTime                    @default(now())
  fecha_actualizacion         DateTime                    @updatedAt
  fecha_inactivacion          DateTime?
}

model usuario {
  id                  String    @id @default(cuid())
  usuario             String    @db.VarChar(40)
  nombre              String    @db.VarChar(40)
  apellido            String    @db.VarChar(40)
  cargo               String    @db.VarChar(40)
  rol                 Role
  correo              String    @unique @db.VarChar(50)
  password            String    @db.VarChar(50)
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
}

model magnitud {
  id                  String     @id @default(cuid())
  alias               String     @db.VarChar(10)
  descripcion         String     @db.VarChar(50)
  variables           variable[]
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  fecha_inactivacion  DateTime?
}

model variable {
  id                  String    @id @default(cuid())
  alias               String
  descripcion         String
  magnitud            magnitud  @relation(fields: [magnitud_id], references: [id])
  magnitud_id         String
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
}

model patrones {
  id          String @id @default(cuid())
  codigo      String @unique @db.VarChar(20)
  descripcion String @db.VarChar(60)
  modelo      String @db.VarChar(40)
  serie       String @db.VarChar(40)
  datos_metrologicos datos_metrologicos_patrones?
  responsable_patron responsable @relation(fields: [responsable_id], references: [id])
  responsable_id     String      @unique
  marca                         marca                         @relation(fields: [marca_id], references: [id])
  marca_id                      String                        @unique
  fecha_creacion                DateTime                      @default(now())
  fecha_actualizacion           DateTime                      @updatedAt
  fecha_inactivacion            DateTime?
  ubicacion                     ubicacion?                    @relation(fields: [ubicacionId], references: [id])
  ubicacionId                   String?
  datos_metrologicos_patronesId String?
}

model datos_metrologicos_equipos {
  id                  String    @id @default(cuid())
  equipo              equipo    @relation(fields: [equipo_id], references: [id])
  
  equipo_id           String    @unique
  emp                 Float     @db.DoublePrecision()
  division_escala     Float
  resolucion          Float
  rango_minimo        Float
  rango_maximo        Float
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
}

model datos_metrologicos_patrones {
  id                  String    @id @default(cuid())
  emp                 Float     @db.DoublePrecision()
  division_escala     Float
  resolucion          Float
  rango_minimo        Float
  rango_maximo        Float
  valor_nominal       Float
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
  patrones            patrones  @relation(fields: [patrones_id], references: [id])
  patrones_id         String    @unique
}

model tipo_patron {
  id                  String    @id @default(cuid())
  alias               String
  descripcion         String
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  fecha_inactivacion  DateTime?
}

// Lugar para los Enum

enum Role {
  Admin
  Metrologo
  Auxiliar
  Consulta
  Cordinador
}
